<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                           http://www.springframework.org/schema/beans/spring-beans.xsd 
                           http://camel.apache.org/schema/spring 
                           http://camel.apache.org/schema/spring/camel-spring.xsd
                           http://www.springframework.org/schema/context  
                           http://www.springframework.org/schema/context/spring-context-2.5.xsd 
                           http://www.springframework.org/schema/tx       
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
                           
    <context:component-scan base-package="org.springboot.eventbus"/>
    
     
     <bean
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:appli*.properties</value>
				<value>classpath*:kafka*.properties</value>
				<value>classpath*:event-bus*.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource">
			<bean class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
				<property name="driverClass" value="org.h2.Driver" />
				<!-- <property name="url" value="jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000" />-->
				<property name="url" value="jdbc:h2:tcp://localhost/~/test" />
				<property name="username" value="sa" />
				<property name="password" value="" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>	

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="org.springboot.eventbus.entity" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>				
				<prop key="hibernate.order_inserts">true</prop>
				<prop key="hibernate.order_updates">true</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_minimal_puts">true</prop>				
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>				
				<prop key="hibernate.cache.hazelcast.shutdown_on_session_factory_close">true</prop>				
			</props>
		</property>
	</bean>	
   <!-- <bean id="userDao" class="org.springboot.angular.demo.usermanagment.security.impl.UserStaticDao"/> -->
   

	<!-- <import resource="classpath*:jms-broker.xml"/>	 
	        
 <camelContext id="camel-server" xmlns="http://camel.apache.org/schema/spring">		
  <template id="camelTemplate"/>
	  <route>
	    <from uri="jms:queue:workflow"/>
	    <to uri="bean:workFlowService"/>
	  </route>
</camelContext> -->
   

</beans>